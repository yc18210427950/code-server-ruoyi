{
  "manifest": {
    "name": "@vue/compiler-sfc",
    "version": "3.4.15",
    "description": "@vue/compiler-sfc",
    "main": "dist/compiler-sfc.cjs.js",
    "module": "dist/compiler-sfc.esm-browser.js",
    "types": "dist/compiler-sfc.d.ts",
    "files": [
      "dist"
    ],
    "exports": {
      ".": {
        "types": "./dist/compiler-sfc.d.ts",
        "node": "./dist/compiler-sfc.cjs.js",
        "module": "./dist/compiler-sfc.esm-browser.js",
        "import": "./dist/compiler-sfc.esm-browser.js",
        "require": "./dist/compiler-sfc.cjs.js"
      },
      "./*": "./*"
    },
    "buildOptions": {
      "name": "VueCompilerSFC",
      "formats": [
        "cjs",
        "esm-browser"
      ],
      "prod": false,
      "enableNonBrowserBranches": true
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vuejs/core.git",
      "directory": "packages/compiler-sfc"
    },
    "keywords": [
      "vue"
    ],
    "author": {
      "name": "Evan You"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/vuejs/core/issues"
    },
    "homepage": "https://github.com/vuejs/core/tree/main/packages/compiler-sfc#readme",
    "dependencies": {
      "@babel/parser": "^7.23.6",
      "estree-walker": "^2.0.2",
      "magic-string": "^0.30.5",
      "postcss": "^8.4.33",
      "source-map-js": "^1.0.2",
      "@vue/compiler-core": "3.4.15",
      "@vue/shared": "3.4.15",
      "@vue/compiler-dom": "3.4.15",
      "@vue/compiler-ssr": "3.4.15"
    },
    "devDependencies": {
      "@babel/types": "^7.23.6",
      "@vue/consolidate": "^0.17.3",
      "hash-sum": "^2.0.0",
      "lru-cache": "^10.1.0",
      "merge-source-map": "^1.1.0",
      "minimatch": "^9.0.3",
      "postcss-modules": "^6.0.0",
      "postcss-selector-parser": "^6.0.15",
      "pug": "^3.0.2",
      "sass": "^1.69.7"
    },
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-@vue-compiler-sfc-3.4.15-4e5811e681955fcec886cebbec483f6ae463a64b-integrity/node_modules/@vue/compiler-sfc/package.json",
    "readmeFilename": "README.md",
    "readme": "# @vue/compiler-sfc\n\n> Lower level utilities for compiling Vue Single File Components\n\n**Note: as of 3.2.13+, this package is included as a dependency of the main `vue` package and can be accessed as `vue/compiler-sfc`. This means you no longer need to explicitly install this package and ensure its version match that of `vue`'s. Just use the main `vue/compiler-sfc` deep import instead.**\n\nThis package contains lower level utilities that you can use if you are writing a plugin / transform for a bundler or module system that compiles Vue Single File Components (SFCs) into JavaScript. It is used in [vue-loader](https://github.com/vuejs/vue-loader) and [@vitejs/plugin-vue](https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue).\n\n## API\n\nThe API is intentionally low-level due to the various considerations when integrating Vue SFCs in a build system:\n\n- Separate hot-module replacement (HMR) for script, template and styles\n\n  - template updates should not reset component state\n  - style updates should be performed without component re-render\n\n- Leveraging the tool's plugin system for pre-processor handling. e.g. `<style lang=\"scss\">` should be processed by the corresponding webpack loader.\n\n- In some cases, transformers of each block in an SFC do not share the same execution context. For example, when used with `thread-loader` or other parallelized configurations, the template sub-loader in `vue-loader` may not have access to the full SFC and its descriptor.\n\nThe general idea is to generate a facade module that imports the individual blocks of the component. The trick is the module imports itself with different query strings so that the build system can handle each request as \"virtual\" modules:\n\n```\n                                  +--------------------+\n                                  |                    |\n                                  |  script transform  |\n                           +----->+                    |\n                           |      +--------------------+\n                           |\n+--------------------+     |      +--------------------+\n|                    |     |      |                    |\n|  facade transform  +----------->+ template transform |\n|                    |     |      |                    |\n+--------------------+     |      +--------------------+\n                           |\n                           |      +--------------------+\n                           +----->+                    |\n                                  |  style transform   |\n                                  |                    |\n                                  +--------------------+\n```\n\nWhere the facade module looks like this:\n\n```js\n// main script\nimport script from '/project/foo.vue?vue&type=script'\n// template compiled to render function\nimport { render } from '/project/foo.vue?vue&type=template&id=xxxxxx'\n// css\nimport '/project/foo.vue?vue&type=style&index=0&id=xxxxxx'\n\n// attach render function to script\nscript.render = render\n\n// attach additional metadata\n// some of these should be dev only\nscript.__file = 'example.vue'\nscript.__scopeId = 'xxxxxx'\n\n// additional tooling-specific HMR handling code\n// using __VUE_HMR_API__ global\n\nexport default script\n```\n\n### High Level Workflow\n\n1. In facade transform, parse the source into descriptor with the `parse` API and generate the above facade module code based on the descriptor;\n\n2. In script transform, use `compileScript` to process the script. This handles features like `<script setup>` and CSS variable injection. Alternatively, this can be done directly in the facade module (with the code inlined instead of imported), but it will require rewriting `export default` to a temp variable (a `rewriteDefault` convenience API is provided for this purpose) so additional options can be attached to the exported object.\n\n3. In template transform, use `compileTemplate` to compile the raw template into render function code.\n\n4. In style transform, use `compileStyle` to compile raw CSS to handle `<style scoped>`, `<style module>` and CSS variable injection.\n\nOptions needed for these APIs can be passed via the query string.\n\nFor detailed API references and options, check out the source type definitions. For actual usage of these APIs, check out [@vitejs/plugin-vue](https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue) or [vue-loader](https://github.com/vuejs/vue-loader/tree/next).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018-present, Yuxi (Evan) You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/@vue/compiler-sfc/-/compiler-sfc-3.4.15.tgz#4e5811e681955fcec886cebbec483f6ae463a64b",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/@vue/compiler-sfc/-/compiler-sfc-3.4.15.tgz",
    "hash": "4e5811e681955fcec886cebbec483f6ae463a64b",
    "integrity": "sha512-LCn5M6QpkpFsh3GQvs2mJUOAlBQcCco8D60Bcqmf3O3w5a+KWS5GvYbrrJBkgvL1BDnTp+e8q0lXCLgHhKguBA==",
    "registry": "npm",
    "packageName": "@vue/compiler-sfc",
    "cacheIntegrity": "sha512-LCn5M6QpkpFsh3GQvs2mJUOAlBQcCco8D60Bcqmf3O3w5a+KWS5GvYbrrJBkgvL1BDnTp+e8q0lXCLgHhKguBA== sha1-TlgR5oGVX87Ihs677Eg/auRjpks="
  },
  "registry": "npm",
  "hash": "4e5811e681955fcec886cebbec483f6ae463a64b"
}