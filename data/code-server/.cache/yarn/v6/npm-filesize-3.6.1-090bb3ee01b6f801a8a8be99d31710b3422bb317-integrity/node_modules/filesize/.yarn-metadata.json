{
  "manifest": {
    "name": "filesize",
    "description": "JavaScript library to generate a human readable String describing the file size",
    "version": "3.6.1",
    "homepage": "https://filesizejs.com/",
    "author": {
      "name": "Jason Mulligan",
      "email": "jason.mulligan@avoidwork.com"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/avoidwork/filesize.js.git"
    },
    "bugs": {
      "url": "https://github.com/avoidwork/filesize.js/issues"
    },
    "license": "BSD-3-Clause",
    "main": "lib/filesize",
    "engines": {
      "node": ">= 0.4.0"
    },
    "scripts": {
      "test": "grunt test"
    },
    "devDependencies": {
      "babel-core": "^6.26.0",
      "babel-preset-env": "^1.6.1",
      "babel-minify": "^0.3.0",
      "grunt": "^1.0.1",
      "grunt-babel": "^7.0.0",
      "grunt-cli": "^1.2.0",
      "grunt-contrib-concat": "^1.0.1",
      "grunt-contrib-nodeunit": "^1.0.0",
      "grunt-contrib-uglify": "^3.3.0",
      "grunt-contrib-watch": "^1.0.0",
      "grunt-eslint": "^20.1.0"
    },
    "keywords": [
      "file",
      "filesize",
      "size",
      "readable",
      "file system",
      "bytes",
      "diff"
    ],
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-filesize-3.6.1-090bb3ee01b6f801a8a8be99d31710b3422bb317-integrity/node_modules/filesize/package.json",
    "readmeFilename": "README.md",
    "readme": "# filesize.js\n\n[![build status](https://secure.travis-ci.org/avoidwork/filesize.js.svg)](http://travis-ci.org/avoidwork/filesize.js)  [![downloads](https://img.shields.io/npm/dt/filesize.svg)](https://www.npmjs.com/package/filesize) [![CDNJS version](https://img.shields.io/cdnjs/v/filesize.svg)](https://cdnjs.com/libraries/filesize)\n\nfilesize.js provides a simple way to get a human readable file size string from a number (float or integer) or string.\n\n## Optional settings\n\n`filesize()` accepts an optional descriptor Object as a second argument, so you can customize the output.\n\n### base\n_*(number)*_ Number base, default is `2`\n\n### bits\n_*(boolean)*_ Enables `bit` sizes, default is `false`\n\n### exponent\n_*(number)*_ Specifies the symbol via exponent, e.g. `2` is `MB` for base 2, default is `-1`\n\n### fullform\n_*(boolean)*_ Enables full form of unit of measure, default is `false`\n\n### fullforms\n_*(array)*_ Array of full form overrides, default is `[]`\n\n### output\n_*(string)*_ Output of function (`array`, `exponent`, `object`, or `string`), default is `string`\n\n### round\n_*(number)*_ Decimal place, default is `2`\n\n### separator\n_*(string)*_ Decimal separator character, default is `.`\n\n### spacer\n_*(string)*_ Character between the `result` and `suffix`, default is `\" \"`\n\n### standard\n_*(string)*_ Standard unit of measure, can be `iec` or `jedec`, default is `jedec`; can be overruled by `base`\n\n### symbols\n_*(object)*_ Dictionary of SI/JEDEC symbols to replace for localization, defaults to english if no match is found\n\n### suffixes (deprecated: use 'symbols')\n_*(object)*_ Dictionary of SI/JEDEC symbols to replace for localization, defaults to english if no match is found\n\n### unix\n_*(boolean)*_ Enables unix style human readable output, e.g `ls -lh`, default is `false`\n\n## Examples\n\n```javascript\nfilesize(500);                        // \"500 B\"\nfilesize(500, {bits: true});          // \"4 Kb\"\nfilesize(265318, {base: 10});         // \"265.32 kB\"\nfilesize(265318);                     // \"259.1 KB\"\nfilesize(265318, {round: 0});         // \"259 KB\"\nfilesize(265318, {output: \"array\"});  // [259.1, \"KB\"]\nfilesize(265318, {output: \"object\"}); // {value: 259.1, suffix: \"KB\", symbol: \"KB\"}\nfilesize(1, {symbols: {B: \"Б\"}});     // \"1 Б\"\nfilesize(1024);                       // \"1 KB\"\nfilesize(1024, {exponent: 0});        // \"1024 B\"\nfilesize(1024, {output: \"exponent\"}); // 1\nfilesize(265318, {standard: \"iec\"});  // \"259.1 KiB\"\nfilesize(265318, {standard: \"iec\", fullform: true}); // \"259.1 kibibytes\"\nfilesize(12, {fullform: true, fullforms: [\"байтов\"]});  // \"12 байтов\"\nfilesize(265318, {separator: \",\"});   // \"259,1 KB\"\n```\n\n## Partial Application\n`filesize.partial()` takes the second parameter of `filesize()` and returns a new function with the configuration applied \nupon execution. This can be used to reduce `Object` creation if you call `filesize()` without caching the `descriptor` \nin lexical scope.\n\n```javascript\nconst size = filesize.partial({standard: \"iec\"});\n\nsize(265318); // \"259.1 KiB\"\n```\n\n## How can I load filesize.js?\nfilesize.js supports AMD loaders (require.js, curl.js, etc.), node.js & npm (```npm install filesize```), or using a script tag.\n\nAn ES6 version is bundled with an npm install, but requires you load it with the full path, e.g. `require(path.join(__dirname, 'node_modules', 'filesize', 'lib', 'filesize.es6.js'))`.\n\n## License\nCopyright (c) 2018 Jason Mulligan\nLicensed under the BSD-3 license.\n",
    "licenseText": "Copyright (c) 2018, Jason Mulligan\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of filesize nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/filesize/-/filesize-3.6.1.tgz#090bb3ee01b6f801a8a8be99d31710b3422bb317",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/filesize/-/filesize-3.6.1.tgz",
    "hash": "090bb3ee01b6f801a8a8be99d31710b3422bb317",
    "integrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg==",
    "registry": "npm",
    "packageName": "filesize",
    "cacheIntegrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg== sha1-CQuz7gG2+AGoqL6Z0xcQs0Irsxc="
  },
  "registry": "npm",
  "hash": "090bb3ee01b6f801a8a8be99d31710b3422bb317"
}