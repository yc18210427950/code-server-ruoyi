{
  "manifest": {
    "name": "postcss-prefix-selector",
    "description": "Prefix all CSS rules with a selector",
    "version": "1.16.0",
    "author": {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    },
    "contributors": [
      {
        "name": "Valentin Radulescu",
        "email": "hi@valentin.io",
        "url": "https://valentin.io"
      }
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/RadValentin/postcss-prefix-selector.git"
    },
    "bugs": {
      "url": "https://github.com/RadValentin/postcss-prefix-selector/issues"
    },
    "homepage": "https://github.com/RadValentin/postcss-prefix-selector",
    "peerDependencies": {
      "postcss": ">4 <9"
    },
    "devDependencies": {
      "husky": "^4.0.2",
      "istanbul": "~0.4.5",
      "lint-staged": "^10.0.3",
      "mocha": "^9.2.2",
      "postcss": "^8.0.0",
      "postcss-nested": "^5.0.6",
      "prettier": "^2.0.0"
    },
    "scripts": {
      "test": "mocha",
      "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot",
      "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot",
      "lint": "prettier --write '**/*.{js,css}'"
    },
    "lint-staged": {
      "*.js": [
        "prettier --write"
      ]
    },
    "prettier": {
      "printWidth": 80,
      "singleQuote": true
    },
    "keywords": [
      "postcss",
      "prefix",
      "selectors",
      "postcss-plugin",
      "css",
      "selector",
      "plugin"
    ],
    "files": [
      "index.js"
    ],
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-postcss-prefix-selector-1.16.0-ad5b56f9a73a2c090ca7161049632c9d89bcb404-integrity/node_modules/postcss-prefix-selector/package.json",
    "readmeFilename": "README.md",
    "readme": "# postcss-prefix-selector\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Gitpod ready-to-code][gitpod-image]][gitpod-url]\n\n> Prefix every CSS selector with a custom namespace `.a => .prefix .a`\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage with PostCSS](#usage-with-postcss)\n- [Usage with Webpack](#usage-with-webpack)\n- [Options](#options)\n- [Maintainer](#maintainer)\n- [Contribute](#contribute)\n- [License](#license)\n\n## Install\n\n```console\n$ npm install postcss-prefix-selector\n```\n\n## Usage with PostCSS\n\n```js\nconst prefixer = require('postcss-prefix-selector')\n\n// css to be processed\nconst css = fs.readFileSync(\"input.css\", \"utf8\")\n\nconst out = postcss().use(prefixer({\n  prefix: '.some-selector',\n  exclude: ['.c'],\n\n  // Optional transform callback for case-by-case overrides\n  transform: function (prefix, selector, prefixedSelector, filePath, rule) {\n    if (selector === 'body') {\n      return 'body' + prefix;\n    } else {\n      return prefixedSelector;\n    }\n  }\n})).process(css).css\n```\n\nUsing the options above and the CSS below...\n\n```css\nbody {\n  background: red;\n}\n\n.a, .b {\n  color: aqua;\n}\n\n.c {\n  color: coral;\n}\n```\n\nYou will get the following output\n\n```css\nbody.some-selector {\n  background: red;\n}\n\n.some-selector .a, .some-selector .b {\n  color: aqua;\n}\n\n.c {\n  color: coral;\n}\n```\n\n## Usage with webpack\n\nUse it like you'd use any other PostCSS plugin. If you also have `autoprefixer` in your webpack config then make sure that `postcss-prefix-selector` is called first. This is needed to avoid running the prefixer twice on both standard selectors and vendor specific ones (ex: `@keyframes` and `@webkit-keyframes`).\n\n```js\nmodule: {\n  rules: [{\n    test: /\\.css$/,\n    use: [\n      require.resolve('style-loader'),\n      require.resolve('css-loader'),\n      {\n        loader: require.resolve('postcss-loader'),\n        options: {\n          postcssOptions: {\n            plugins: {\n              \"postcss-prefix-selector\": {\n                prefix: '.my-prefix',\n                transform(prefix, selector, prefixedSelector, filePath, rule) {\n                  if (selector.match(/^(html|body)/)) {\n                    return selector.replace(/^([^\\s]*)/, `$1 ${prefix}`);\n                  }\n                  \n                  if (filePath.match(/node_modules/)) {\n                    return selector; // Do not prefix styles imported from node_modules\n                  }\n                  \n                  const annotation = rule.prev();\n                  if (annotation?.type === 'comment' && annotation.text.trim() === 'no-prefix') {\n                    return selector; // Do not prefix style rules that are preceded by: /* no-prefix */\n                  }\n\n                  return prefixedSelector;\n                },\n              },\n              autoprefixer: {\n                browsers: ['last 4 versions']\n              }\n            }\n          }\n        }\n      }\n    ]\n  }]\n}\n```\n\n## Options\n\n| Name | Type | Description |\n|-|-|-|\n| `prefix` | `string` | This string is added before every CSS selector |\n| `exclude` | `string[]` or `RegExp[]` | It's possible to avoid prefixing some selectors by passing an array of selectors |\n| `transform` | `Function` | In cases where you may want to use the prefix differently for different selectors, it is possible to pass in a custom transform method |\n| `ignoreFiles` | `string[]` or `RegExp[]` | List of ignored files for processing |\n| `includeFiles` | `string[]` or `RegExp[]` | List of included files for processing |\n\n## Maintainer\n\nThis project was originally created by [@jongleberry](https://github.com/jonathanong) and is being maintained by [@RadValentin](https://github.com/RadValentin). If you have any questions, feel free to ping the latter.\n\n## Contribute\n\nPlease contribute! If you have any questions or bugs, [open an issue](https://github.com/RadValentin/postcss-prefix-selector/issues/new). Or, open a pull request with a fix.\n\nThis project uses Mocha. If you submit a PR, please add appropriate tests and make sure that everything is green for your branch.\n\n## License\n\n[MIT](LICENSE) Â© 2015-2022 Jonathan Ong.\n\n[gitpod-image]: https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod\n[gitpod-url]: https://gitpod.io/#https://github.com/RadValentin/postcss-prefix-selector\n[npm-image]: https://img.shields.io/npm/v/postcss-prefix-selector.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/postcss-prefix-selector\n[travis-image]: https://img.shields.io/travis/RadValentin/postcss-prefix-selector.svg?style=flat-square\n[travis-url]: https://travis-ci.org/RadValentin/postcss-prefix-selector\n[coveralls-image]: https://img.shields.io/coveralls/jonathanong/postcss-prefix-selector.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/jonathanong/postcss-prefix-selector\n[license-image]: http://img.shields.io/npm/l/postcss-prefix-selector.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/postcss-prefix-selector.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/postcss-prefix-selector\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2015-2017 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/postcss-prefix-selector/-/postcss-prefix-selector-1.16.0.tgz#ad5b56f9a73a2c090ca7161049632c9d89bcb404",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/postcss-prefix-selector/-/postcss-prefix-selector-1.16.0.tgz",
    "hash": "ad5b56f9a73a2c090ca7161049632c9d89bcb404",
    "integrity": "sha512-rdVMIi7Q4B0XbXqNUEI+Z4E+pueiu/CS5E6vRCQommzdQ/sgsS4dK42U7GX8oJR+TJOtT+Qv3GkNo6iijUMp3Q==",
    "registry": "npm",
    "packageName": "postcss-prefix-selector",
    "cacheIntegrity": "sha512-rdVMIi7Q4B0XbXqNUEI+Z4E+pueiu/CS5E6vRCQommzdQ/sgsS4dK42U7GX8oJR+TJOtT+Qv3GkNo6iijUMp3Q== sha1-rVtW+ac6LAkMpxYQSWMsnYm8tAQ="
  },
  "registry": "npm",
  "hash": "ad5b56f9a73a2c090ca7161049632c9d89bcb404"
}