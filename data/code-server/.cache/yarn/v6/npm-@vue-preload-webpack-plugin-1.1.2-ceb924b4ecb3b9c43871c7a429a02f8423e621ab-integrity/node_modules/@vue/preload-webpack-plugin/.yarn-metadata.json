{
  "manifest": {
    "name": "@vue/preload-webpack-plugin",
    "version": "1.1.2",
    "description": "A webpack plugin for injecting <link rel='preload|prefecth'> into HtmlWebpackPlugin pages, with async chunk support",
    "author": {
      "name": "Addy Osmani",
      "email": "addy.osmani@gmail.com",
      "url": "https://github.com/addyosmani"
    },
    "license": "Apache-2.0",
    "bugs": {
      "url": "https://github.com/vuejs/preload-webpack-plugin/issues"
    },
    "homepage": "https://github.com/vuejs/preload-webpack-plugin",
    "repository": {
      "type": "git",
      "url": "https://github.com/vuejs/preload-webpack-plugin.git"
    },
    "keywords": [
      "webpack",
      "plugin",
      "html-webpack-plugin",
      "script",
      "preload",
      "resource hints"
    ],
    "engines": {
      "node": ">=6.0.0"
    },
    "scripts": {
      "lint": "eslint --format=codeframe .",
      "test": "npm run lint && jasmine test/unit/* test/e2e/index.js",
      "coverage": "nyc npm run test",
      "prepublishOnly": "npm run test"
    },
    "main": "src/index.js",
    "files": [
      "src"
    ],
    "devDependencies": {
      "eslint": "^4.19.1",
      "eslint-plugin-vue-libs": "^2.1.0",
      "html-webpack-plugin": "^3.2.0",
      "jasmine": "^3.1.0",
      "jsdom": "^11.9.0",
      "memory-fs": "^0.4.1",
      "nyc": "^11.7.1",
      "rimraf": "^2.6.2",
      "webpack": "^4.0.0"
    },
    "peerDependencies": {
      "html-webpack-plugin": ">=2.26.0",
      "webpack": ">=4.0.0"
    },
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-@vue-preload-webpack-plugin-1.1.2-ceb924b4ecb3b9c43871c7a429a02f8423e621ab-integrity/node_modules/@vue/preload-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "@vue/preload-webpack-plugin\n============\n[![NPM version][npm-img]][npm-url]\n\nThis is a fork of [preload-webpack-plugin](https://github.com/GoogleChromeLabs/preload-webpack-plugin) with a number of changes:\n\n- Uses a combination of `htmlWebpackPluginBeforeHtmlProcessing` and `htmlWebpackPluginAlterAssetTags` hooks to inject links as objects rather than strings. This allows for more flexibility when the tags need to be altered by other plugins.\n\n- `include` option can be an object in the shape of `{ type?, chunks?, entries? }`. For example, to prefetch async chunks for a specific entry point:\n\n  ``` js\n  {\n    rel: 'prefetch',\n    include: {\n      type: 'asyncChunks',\n      entries: ['app']\n    }\n  }\n  ```\n\n- Added an `includeHtmlNames` option so that the plugin is only applied to a specific HTML file.\n\n- Drops support for webpack v3.\n\n- Drops support for Node < 6.\n\n---\n\n![preloads-plugin-compressor](https://cloud.githubusercontent.com/assets/110953/22451103/7700b812-e720-11e6-89e8-a6d4e3533159.png)\n\nA Webpack plugin for automatically wiring up asynchronous (and other types) of JavaScript\nchunks using `<link rel='preload'>`. This helps with lazy-loading.\n\nNote: This is an extension plugin for [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin) - a plugin that\nsimplifies the creation of HTML files to serve your webpack bundles.\n\nThis plugin is a stop-gap until we add support for asynchronous chunk wiring to\n[script-ext-html-webpack-plugin](https://github.com/numical/script-ext-html-webpack-plugin/pull/9).\n\nIntroduction\n------------\n\n[Preload](https://w3c.github.io/preload/) is a web standard aimed at improving performance\nand granular loading of resources. It is a declarative fetch that can tell a browser to start fetching a\nsource because a developer knows the resource will be needed soon. [Preload: What is it good for?](https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/)\nis a recommended read if you haven't used the feature before.\n\nIn simple web apps, it's straight-forward to specify static paths to scripts you\nwould like to preload - especially if their names or locations are unlikely to change. In more complex apps,\nJavaScript can be split into \"chunks\" (that represent routes or components) at with dynamic\nnames. These names can include hashes, numbers and other properties that can change with each build.\n\nFor example, `chunk.31132ae6680e598f8879.js`.\n\nTo make it easier to wire up async chunks for lazy-loading, this plugin offers a drop-in way to wire them up\nusing `<link rel='preload'>`.\n\nPre-requisites\n--------------\nThis module requires Webpack 2.2.0 and above. It also requires that you're using\n[html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin) in your Webpack project.\n\nInstallation\n---------------\n\nFirst, install the package as a dependency in your package.json:\n\n```sh\n$ npm install --save-dev preload-webpack-plugin\n```\n\nAlternatively, using yarn:\n\n```sh\nyarn add -D preload-webpack-plugin\n```\n\nUsage\n-----------------\n\nNext, in your Webpack config, `require()` the preload plugin as follows:\n\n```js\nconst PreloadWebpackPlugin = require('preload-webpack-plugin');\n```\n\nand finally, configure the plugin in your Webpack `plugins` array after `HtmlWebpackPlugin`:\n\n```js\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin()\n]\n```\n\nWhen preloading files, the plugin will use different `as` attribute depends on the type of each\nfile. For each file ends with `.css`, the plugin will preload it with `as=style`, for each file ends\nwith `.woff2`, the plugin will preload it with `as=font`, while for all other files, `as=script`\nwill be used.\n\nIf you do not prefer to determine `as` attribute depends on suffix of filename, you can also\nexplicitly name it using `as`:\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin({\n    rel: 'preload',\n    as: 'script'\n  })\n]\n```\n\nIn case you need more fine-grained control of the `as` atribute, you could also provide a function here.\nWhen using it, entry name will be provided as the parameter, and function itself should return a\nstring for `as` attribute:\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin({\n    rel: 'preload',\n    as(entry) {\n      if (/\\.css$/.test(entry)) return 'style';\n      if (/\\.woff$/.test(entry)) return 'font';\n      if (/\\.png$/.test(entry)) return 'image';\n      return 'script';\n    }\n  })\n]\n```\n\nNotice that if `as=font` is used in preload, crossorigin will be added, otherwise the font resource\nmight be double fetched. Explains can be found in [this article](https://medium.com/reloading/preload-prefetch-and-priorities-in-chrome-776165961bbf).\n\nBy default, the plugin will assume async script chunks will be preloaded. This is the equivalent of:\n\n```js\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin({\n    rel: 'preload',\n    include: 'asyncChunks'\n  })\n]\n```\n\nFor a project generating two async scripts with dynamically generated names, such as\n`chunk.31132ae6680e598f8879.js` and `chunk.d15e7fdfc91b34bb78c4.js`, the following preloads\nwill be injected into the document `<head>`:\n\n```html\n<link rel=\"preload\" as=\"script\" href=\"chunk.31132ae6680e598f8879.js\">\n<link rel=\"preload\" as=\"script\" href=\"chunk.d15e7fdfc91b34bb78c4.js\">\n```\n\nYou can also configure the plugin to preload all chunks (vendor, async, normal chunks) using `include: 'all'`, or only preload initial chunks with `include: 'initial'`:\n\n```js\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin({\n    rel: 'preload',\n    include: 'all' // or 'initial'\n  })\n]\n```\n\nIn case you work with named chunks, you can explicitly specify which ones to `include` by passing an array:\n```js\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin({\n    rel: 'preload',\n    include: ['home']\n  })\n]\n```\n\nwill inject just this:\n\n```html\n<link rel=\"preload\" as=\"script\" href=\"home.31132ae6680e598f8879.js\">\n```\n\nFiltering chunks\n---------------------\n\nThere may be chunks that you don't want to have preloaded (sourcemaps, for example). Before preloading each chunk, this plugin checks that the file does not match any regex in the `fileBlacklist` option. The default value of this blacklist is `[/\\.map/]`, meaning no sourcemaps will be preloaded. You can easily override this:\n\n```js\nnew PreloadWebpackPlugin({\n  fileBlacklist: [/\\.whatever/]\n})\n```\n\nPassing your own array will override the default, so if you want to continue filtering sourcemaps along with your own custom settings, you'll need to include the regex for sourcemaps:\n\n```js\nnew PreloadWebpackPlugin({\n  fileBlacklist: [/\\.map/, /\\.whatever/]\n})\n```\n\nResource Hints\n---------------------\n\nShould you wish to use Resource Hints (such as `prefetch`) instead of `preload`, this plugin also supports wiring those up.\n\nPrefetch:\n\n```js\nplugins: [\n  new HtmlWebpackPlugin(),\n  new PreloadWebpackPlugin({\n    rel: 'prefetch'\n  })\n]\n```\n\nFor the async chunks mentioned earlier, the plugin would update your HTML to the following:\n\n```html\n<link rel=\"prefetch\" href=\"chunk.31132ae6680e598f8879.js\">\n<link rel=\"prefetch\" href=\"chunk.d15e7fdfc91b34bb78c4.js\">\n```\n\nDemo\n----------------------\n\nA demo application implementing the [PRPL pattern](https://developers.google.com/web/fundamentals/performance/prpl-pattern/) with React that uses this plugin can be found in the `demo`\ndirectory.\n\nSupport\n-------\n\nIf you've found an error in this sample, please file an issue:\n[https://github.com/googlechrome/preload-webpack-plugin/issues](https://github.com/googlechrome/preload-webpack-plugin/issues)\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub.\n\nContributing workflow\n---------------------\n\n`index.js` contains the primary source for the plugin, `test` contains tests and `demo` contains demo code.\n\nTest the plugin:\n\n```sh\n$ npm install\n$ npm run test\n```\n\nLint the plugin:\n\n```sh\n$ npm run lint\n$ npm run lint-fix # fix linting issues\n```\n\nThe project is written in ES2015, but does not use a build-step. This may change depending on\nany Node version support requests posted to the issue tracker.\n\nAdditional Notes\n---------------------------\n\n* Be careful not to `preload` resources a user is unlikely to need. This can waste their bandwidth.\n* Use `preload` for the current session if you think a user is likely to visit the next page. There is no\n  100% guarantee preloaded items will end up in the HTTP Cache and read locally beyond this session.\n* If optimising for future sessions, use `prefetch` and `preconnect`. Prefetched resources are maintained\n  in the HTTP Cache for at least 5 minutes (in Chrome) regardless of the resource's cachability.\n\nRelated plugins\n--------------------------\n\n* [script-ext-html-webpack-plugin](https://github.com/numical/script-ext-html-webpack-plugin) - Enhances html-webpack-plugin with options including 'async', 'defer', 'module' and preload (no async chunk support yet)\n* [resource-hints-webpack-plugin](https://github.com/jantimon/resource-hints-webpack-plugin) - Automatically wires resource hints for your resources (similarly no async chunk support)\n\nLicense\n-------\n\nCopyright 2017 Google, Inc.\n\nLicensed to the Apache Software Foundation (ASF) under one or more contributor\nlicense agreements.  See the NOTICE file distributed with this work for\nadditional information regarding copyright ownership.  The ASF licenses this\nfile to you under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License.  You may obtain a copy of\nthe License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n\n[npm-url]: https://www.npmjs.com/package/@vue/preload-webpack-plugin\n[npm-img]: https://badge.fury.io/js/%40vue%2Fpreload-webpack-plugin.svg\n",
    "licenseText": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014 Google Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/@vue/preload-webpack-plugin/-/preload-webpack-plugin-1.1.2.tgz#ceb924b4ecb3b9c43871c7a429a02f8423e621ab",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/@vue/preload-webpack-plugin/-/preload-webpack-plugin-1.1.2.tgz",
    "hash": "ceb924b4ecb3b9c43871c7a429a02f8423e621ab",
    "integrity": "sha512-LIZMuJk38pk9U9Ur4YzHjlIyMuxPlACdBIHH9/nGYVTsaGKOSnSuELiE8vS9wa+dJpIYspYUOqk+L1Q4pgHQHQ==",
    "registry": "npm",
    "packageName": "@vue/preload-webpack-plugin",
    "cacheIntegrity": "sha512-LIZMuJk38pk9U9Ur4YzHjlIyMuxPlACdBIHH9/nGYVTsaGKOSnSuELiE8vS9wa+dJpIYspYUOqk+L1Q4pgHQHQ== sha1-zrkktOyzucQ4ccekKaAvhCPmIas="
  },
  "registry": "npm",
  "hash": "ceb924b4ecb3b9c43871c7a429a02f8423e621ab"
}