{
  "manifest": {
    "name": "cache-loader",
    "version": "4.1.0",
    "description": "Caches the result of following loaders on disk.",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/cache-loader.git"
    },
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "homepage": "https://github.com/webpack-contrib/cache-loader",
    "bugs": {
      "url": "https://github.com/webpack-contrib/cache-loader/issues"
    },
    "main": "dist/cjs.js",
    "engines": {
      "node": ">= 8.9.0"
    },
    "scripts": {
      "start": "npm run build -- -w",
      "prebuild": "npm run clean",
      "build": "cross-env NODE_ENV=production babel src -d dist --ignore \"src/**/*.test.js\" --copy-files",
      "clean": "del-cli dist",
      "commitlint": "commitlint --from=master",
      "lint:prettier": "prettier \"{**/*,*}.{js,json,md,yml,css}\" --list-different",
      "lint:js": "eslint --cache src test",
      "lint": "npm-run-all -l -p \"lint:**\"",
      "prepare": "npm run build",
      "release": "standard-version",
      "security": "npm audit",
      "test:only": "cross-env NODE_ENV=test jest",
      "test:watch": "cross-env NODE_ENV=test jest --watch",
      "test:coverage": "cross-env NODE_ENV=test jest --collectCoverageFrom=\"src/**/*.js\" --coverage",
      "pretest": "npm run lint",
      "test": "cross-env NODE_ENV=test npm run test:coverage",
      "defaults": "webpack-defaults"
    },
    "files": [
      "dist"
    ],
    "peerDependencies": {
      "webpack": "^4.0.0"
    },
    "dependencies": {
      "buffer-json": "^2.0.0",
      "find-cache-dir": "^3.0.0",
      "loader-utils": "^1.2.3",
      "mkdirp": "^0.5.1",
      "neo-async": "^2.6.1",
      "schema-utils": "^2.0.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.5.5",
      "@babel/core": "^7.5.5",
      "@babel/preset-env": "^7.5.5",
      "@commitlint/cli": "^8.1.0",
      "@commitlint/config-conventional": "^8.1.0",
      "@webpack-contrib/defaults": "^5.0.2",
      "@webpack-contrib/eslint-config-webpack": "^3.0.0",
      "babel-jest": "^24.8.0",
      "babel-loader": "^8.0.6",
      "commitlint-azure-pipelines-cli": "^1.0.2",
      "cross-env": "^5.2.0",
      "del": "^5.0.0",
      "del-cli": "^2.0.0",
      "eslint": "^6.0.1",
      "eslint-config-prettier": "^6.0.0",
      "eslint-plugin-import": "^2.18.0",
      "file-loader": "^4.1.0",
      "husky": "^3.0.0",
      "jest": "^24.8.0",
      "jest-junit": "^6.4.0",
      "lint-staged": "^9.2.0",
      "memory-fs": "^0.4.1",
      "normalize-path": "^3.0.0",
      "npm-run-all": "^4.1.5",
      "prettier": "^1.18.2",
      "standard-version": "^6.0.1",
      "uuid": "^3.3.2",
      "webpack": "^4.36.1",
      "webpack-cli": "^3.3.6"
    },
    "keywords": [
      "webpack"
    ],
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-cache-loader-4.1.0-9948cae353aec0a1fcb1eafda2300816ec85387e-integrity/node_modules/cache-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# cache-loader\n\nThe `cache-loader` allow to Caches the result of following loaders on disk (default) or in the database.\n\n## Getting Started\n\nTo begin, you'll need to install `cache-loader`:\n\n```console\nnpm install --save-dev cache-loader\n```\n\nAdd this loader in front of other (expensive) loaders to cache the result on disk.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.ext$/,\n        use: ['cache-loader', ...loaders],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n> ⚠️ Note that there is an overhead for saving the reading and saving the cache file, so only use this loader to cache expensive loaders.\n\n## Options\n\n|         Name          |                       Type                       |                        n Default                        | Description                                                                                                                                                            |\n| :-------------------: | :----------------------------------------------: | :-----------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|  **`cacheContext`**   |                    `{String}`                    |                       `undefined`                       | Allows you to override the default cache context in order to generate the cache relatively to a path. By default it will use absolute paths                            |\n|    **`cacheKey`**     |    `{Function(options, request) -> {String}}`    |                       `undefined`                       | Allows you to override default cache key generator                                                                                                                     |\n| **`cacheDirectory`**  |                    `{String}`                    | `findCacheDir({ name: 'cache-loader' }) or os.tmpdir()` | Provide a cache directory where cache items should be stored (used for default read/write implementation)                                                              |\n| **`cacheIdentifier`** |                    `{String}`                    |     `cache-loader:{version} {process.env.NODE_ENV}`     | Provide an invalidation identifier which is used to generate the hashes. You can use it for extra dependencies of loaders (used for default read/write implementation) |\n|     **`compare`**     |      `{Function(stats, dep) -> {Boolean}}`       |                       `undefined`                       | Allows you to override default comparison function between the cached dependency and the one is being read. Return `true` to use the cached resource                   |\n|    **`precision`**    |                    `{Number}`                    |                           `0`                           | Round `mtime` by this number of milliseconds both for `stats` and `dep` before passing those params to the comparing function                                          |\n|      **`read`**       |    `{Function(cacheKey, callback) -> {void}}`    |                       `undefined`                       | Allows you to override default read cache data from file                                                                                                               |\n|    **`readOnly`**     |                   `{Boolean}`                    |                         `false`                         | Allows you to override default value and make the cache read only (useful for some environments where you don't want the cache to be updated, only read from it)       |\n|      **`write`**      | `{Function(cacheKey, data, callback) -> {void}}` |                       `undefined`                       | Allows you to override default write cache data to file (e.g. Redis, memcached)                                                                                        |\n\n## Examples\n\n### Basic\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: ['cache-loader', 'babel-loader'],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n### Database Integration\n\n**webpack.config.js**\n\n```js\n// Or different database client - memcached, mongodb, ...\nconst redis = require('redis');\nconst crypto = require('crypto');\n\n// ...\n// connect to client\n// ...\n\nconst BUILD_CACHE_TIMEOUT = 24 * 3600; // 1 day\n\nfunction digest(str) {\n  return crypto\n    .createHash('md5')\n    .update(str)\n    .digest('hex');\n}\n\n// Generate own cache key\nfunction cacheKey(options, request) {\n  return `build:cache:${digest(request)}`;\n}\n\n// Read data from database and parse them\nfunction read(key, callback) {\n  client.get(key, (err, result) => {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!result) {\n      return callback(new Error(`Key ${key} not found`));\n    }\n\n    try {\n      let data = JSON.parse(result);\n      callback(null, data);\n    } catch (e) {\n      callback(e);\n    }\n  });\n}\n\n// Write data to database under cacheKey\nfunction write(key, data, callback) {\n  client.set(key, JSON.stringify(data), 'EX', BUILD_CACHE_TIMEOUT, callback);\n}\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'cache-loader',\n            options: {\n              cacheKey,\n              read,\n              write,\n            },\n          },\n          'babel-loader',\n        ],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/cache-loader.svg\n[npm-url]: https://npmjs.com/package/cache-loader\n[node]: https://img.shields.io/node/v/cache-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/cache-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/cache-loader\n[tests]: https://dev.azure.com/webpack-contrib/cache-loader/_apis/build/status/webpack-contrib.cache-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/cache-loader/_build/latest?definitionId=4&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/cache-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/cache-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=cache-loader\n[size-url]: https://packagephobia.now.sh/result?p=cache-loader\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/cache-loader/-/cache-loader-4.1.0.tgz#9948cae353aec0a1fcb1eafda2300816ec85387e",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/cache-loader/-/cache-loader-4.1.0.tgz",
    "hash": "9948cae353aec0a1fcb1eafda2300816ec85387e",
    "integrity": "sha512-ftOayxve0PwKzBF/GLsZNC9fJBXl8lkZE3TOsjkboHfVHVkL39iUEs1FO07A33mizmci5Dudt38UZrrYXDtbhw==",
    "registry": "npm",
    "packageName": "cache-loader",
    "cacheIntegrity": "sha512-ftOayxve0PwKzBF/GLsZNC9fJBXl8lkZE3TOsjkboHfVHVkL39iUEs1FO07A33mizmci5Dudt38UZrrYXDtbhw== sha1-mUjK41OuwKH8ser9ojAIFuyFOH4="
  },
  "registry": "npm",
  "hash": "9948cae353aec0a1fcb1eafda2300816ec85387e"
}