{
  "manifest": {
    "name": "posthtml-render",
    "version": "1.4.0",
    "description": "Renders PostHTML Tree to HTML/XML",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/posthtml/posthtml-render.git"
    },
    "author": {
      "name": "Ivan Voischev",
      "email": "voischev.ivan@ya.ru"
    },
    "main": "lib/index.js",
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "version": "conventional-changelog -i changelog.md -s -r 0 && git add changelog.md",
      "test": "c8 mocha",
      "docs": "jsdoc2md lib/*.js > render.md",
      "pretest": "clinton"
    },
    "files": [
      "lib"
    ],
    "keywords": [
      "posthtml",
      "render",
      "html",
      "xml"
    ],
    "devDependencies": {
      "@commitlint/cli": "^11.0.0",
      "@commitlint/config-angular": "^11.0.0",
      "c8": "^7.3.5",
      "chai": "^4.2.0",
      "clinton": "^0.14.0",
      "conventional-changelog-cli": "^2.1.1",
      "husky": "^4.3.0",
      "jsdoc-to-markdown": "^6.0.1",
      "lint-staged": "^10.5.1",
      "mocha": "^8.2.1",
      "xo": "^0.34.2"
    },
    "types": "lib/index.d.ts",
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-posthtml-render-1.4.0-40114070c45881cacb93347dae3eff53afbcff13-integrity/node_modules/posthtml-render/package.json",
    "readmeFilename": "readme.md",
    "readme": "[![npm][npm]][npm-url]\n[![node]]()\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"https://github.com/posthtml/posthtml\">\n    <img width=\"200\" height=\"200\" alt=\"PostHTML\"\n      src=\"http://posthtml.github.io/posthtml/logo.svg\">\n  </a>\n  <h1>PostHTML Render</h1>\n  <p>Renders a PostHTML Tree to HTML/XML</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D posthtml-render\n```\n\n> ‚ÑπÔ∏è This module is also available for [bower](http://bower.io) and as an AMD, CommonJS and IIFE (global) module, uncompressed and compressed\n\n<h2 align=\"center\">Usage</h2>\n\n### `NodeJS`\n\n```js\nconst render = require('posthtml-render')\n\nconst tree = []\n\nconst node = {}\n\nnode.tag = 'ul'\nnode.attrs = { class: 'list' }\nnode.content = [\n 'one',\n 'two',\n 'three'\n].map((content) => ({ tag: 'li', content }))\n\ntree.push(node)\n\nconst html = render(tree, options)\n\n```\n\n```html\n<ul class=\"list\">\n  <li>one</li>\n  <li>two</li>\n  <li>three</li>\n</ul>\n```\n\n### `üåê Browser`\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Title</title>\n  <script src=\"./node_modules/posthtml-render/lib/browser.min.js\"></script>\n  <script >\n    const tree = {\n      tag: 'h1',\n      attrs: {\n        style: 'color: red;'\n      },\n      content: [ 'Title' ]\n    }\n\n    window.onload = function () {\n      document.body.innerHTML = render(tree)\n    }\n  </script>\n</head>\n<body></body>\n</html>\n```\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**[`singleTags`](#singletags)**|`{Array<String\\|RegExp>}`|`[]`|Specify custom single tags (self closing)|\n|**[`closingSingleTag`](#closingSingleTag)**|`{String}`|[`>`](#default)|Specify the single tag closing format|\n|**[`quoteAllAttributes`](#quoteAllAttributes)**|`{Boolean}`|[`true`](#default)|Put double quotes around all tags, even when not necessary.|\n|**[`replaceQuote`](#replaceQuote)**|`{Boolean}`|[`true`](#default)|Replaces quotes in attribute values with `&quote;`.|\n|**[`quoteStyle`](#quoteStyle)**|`{0|1|2}`|[`2`](#default)|Specify the style of quote arround the attribute values|\n\n### `singleTags`\n\nSpecify custom single tags (self closing)\n\n### `{String}`\n\n```js\nconst render = require('posthtml-render')\n\nconst tree = [ { tag: 'name' } ]\nconst options = { singleTags: [ 'name' ] }\n\nconst html = render(tree, options)\n```\n\n**result.html**\n```html\n<name>\n```\n\n#### `{RegExp}`\n\n```js\nconst render = require('posthtml-render')\n\nconst tree = [ { tag: '%=title%' } ]\nconst options = { singleTags: [ '/^%.*%$/' ] }\n\nconst html = render(tree, options)\n```\n\n**result.html**\n```html\n<%=title%>\n```\n\n### `closingSingleTag`\n\nSpecify the single tag closing format\n\n#### `Formats`\n\n```js\nconst render = require('posthtml-render')\n\nconst tree = [ { tag: 'img' } ]\n```\n\n##### `'tag'`\n\n```js\nconst html = render(tree, { closingSingleTag: 'tag' })\n```\n\n```html\n<custom></custom>\n```\n\n##### `'slash'`\n\n```js\nconst html = render(tree, { closingSingleTag: 'slash' })\n```\n\n```html\n<custom />\n```\n\n##### `'default' (Default)`\n\n```js\nconst html = render(tree)\n```\n\n```html\n<img></img>\n```\n\n### `quoteAllAttributes`\n\nSpecify if all attributes should be quoted.\n\n##### `true (Default)`\n\n```html\n<i src=\"index.js\"></i>\n```\n\n##### `false`\n\n```html\n<i src=index.js></i>\n```\n\n### `replaceQuote`\n\nReplaces quotes in attribute values with `&quote;`.\n\n##### `true (Default)`\n\n```html\n<img src=\"<?php echo $foo[&quote;bar&quote;] ?>\">\n```\n\n##### `false`\n\n```html\n<img src=\"<?php echo $foo[\"bar\"] ?>\">\n```\n\n### `quoteStyle`\n\n##### `2 (Default)`\n\nAttribute values are wrapped in double quotes:\n\n```html\n<img src=\"https://example.com/example.png\" onload=\"testFunc(\"test\")\">\n```\n\n##### `1`\n\nAttribute values are wrapped in single quote:\n\n```html\n<img src='https://example.com/example.png' onload='testFunc(\"test\")'>\n```\n\n##### `0`\n\nQuote style is based on attribute values (an alternative for `replaceQuote` option):\n\n```html\n<img src=\"https://example.com/example.png\" onload='testFunc(\"test\")'>\n```\n\n\n[npm]: https://img.shields.io/npm/v/posthtml-render.svg\n[npm-url]: https://npmjs.com/package/posthtml-render\n\n[node]: https://img.shields.io/node/v/posthtml-render.svg\n[node-url]: https://img.shields.io/node/v/posthtml-render.svg\n\n[deps]: https://david-dm.org/posthtml/posthtml-render.svg\n[deps-url]: https://david-dm.org/posthtml/posthtml-render\n\n[tests]: http://img.shields.io/travis/posthtml/posthtml-render.svg\n[tests-url]: https://travis-ci.org/posthtml/posthtml-render\n\n[cover]: https://coveralls.io/repos/github/posthtml/posthtml-render/badge.svg\n[cover-url]: https://coveralls.io/github/posthtml/posthtml-render\n\n[chat]: https://badges.gitter.im/posthtml/posthtml.svg\n[chat-url]: https://gitter.im/posthtml/posthtml\n",
    "licenseText": "License (MIT)\n\nCopyright (c) 2017 Ivan Voischev <voischev.ivan@ya.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/posthtml-render/-/posthtml-render-1.4.0.tgz#40114070c45881cacb93347dae3eff53afbcff13",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/posthtml-render/-/posthtml-render-1.4.0.tgz",
    "hash": "40114070c45881cacb93347dae3eff53afbcff13",
    "integrity": "sha512-W1779iVHGfq0Fvh2PROhCe2QhB8mEErgqzo1wpIt36tCgChafP+hbXIhLDOM8ePJrZcFs0vkNEtdibEWVqChqw==",
    "registry": "npm",
    "packageName": "posthtml-render",
    "cacheIntegrity": "sha512-W1779iVHGfq0Fvh2PROhCe2QhB8mEErgqzo1wpIt36tCgChafP+hbXIhLDOM8ePJrZcFs0vkNEtdibEWVqChqw== sha1-QBFAcMRYgcrLkzR9rj7/U6+8/xM="
  },
  "registry": "npm",
  "hash": "40114070c45881cacb93347dae3eff53afbcff13"
}