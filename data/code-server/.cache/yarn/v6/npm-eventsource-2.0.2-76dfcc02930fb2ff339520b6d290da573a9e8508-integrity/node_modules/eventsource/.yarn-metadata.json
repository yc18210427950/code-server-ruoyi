{
  "manifest": {
    "name": "eventsource",
    "version": "2.0.2",
    "description": "W3C compliant EventSource client for Node.js and browser (polyfill)",
    "keywords": [
      "eventsource",
      "http",
      "streaming",
      "sse",
      "polyfill"
    ],
    "homepage": "http://github.com/EventSource/eventsource",
    "author": {
      "name": "Aslak HellesÃ¸y",
      "email": "aslak.hellesoy@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/EventSource/eventsource.git"
    },
    "bugs": {
      "url": "http://github.com/EventSource/eventsource/issues"
    },
    "main": "./lib/eventsource",
    "license": "MIT",
    "licenses": [
      {
        "type": "MIT",
        "url": "http://github.com/EventSource/eventsource/raw/master/LICENSE"
      }
    ],
    "devDependencies": {
      "buffer-from": "^1.1.1",
      "express": "^4.15.3",
      "mocha": "^3.5.3",
      "nyc": "^11.2.1",
      "serve-static": "^1.12.3",
      "ssestream": "^1.0.0",
      "standard": "^10.0.2",
      "webpack": "^3.5.6"
    },
    "scripts": {
      "test": "mocha --reporter spec && standard",
      "polyfill": "webpack lib/eventsource-polyfill.js example/eventsource-polyfill.js",
      "postpublish": "git push && git push --tags",
      "coverage": "nyc --reporter=html --reporter=text _mocha --reporter spec"
    },
    "engines": {
      "node": ">=12.0.0"
    },
    "dependencies": {},
    "standard": {
      "ignore": [
        "example/eventsource-polyfill.js"
      ],
      "globals": [
        "URL"
      ]
    },
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-eventsource-2.0.2-76dfcc02930fb2ff339520b6d290da573a9e8508-integrity/node_modules/eventsource/package.json",
    "readmeFilename": "README.md",
    "readme": "# EventSource [![npm version](http://img.shields.io/npm/v/eventsource.svg?style=flat-square)](https://www.npmjs.com/package/eventsource)[![NPM Downloads](https://img.shields.io/npm/dm/eventsource.svg?style=flat-square)](http://npm-stat.com/charts.html?package=eventsource&from=2015-09-01)[![Dependencies](https://img.shields.io/david/EventSource/eventsource.svg?style=flat-square)](https://david-dm.org/EventSource/eventsource)\n\n![Build](https://github.com/EventSource/eventsource/actions/workflows/build.yml/badge.svg)\n\nThis library is a pure JavaScript implementation of the [EventSource](https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events) client. The API aims to be W3C compatible.\n\nYou can use it with Node.js or as a browser polyfill for\n[browsers that don't have native `EventSource` support](http://caniuse.com/#feat=eventsource).\n\n## Install\n\n    npm install eventsource\n\n## Example\n\n    npm install\n    node ./example/sse-server.js\n    node ./example/sse-client.js    # Node.js client\n    open http://localhost:8080      # Browser client - both native and polyfill\n    curl http://localhost:8080/sse  # Enjoy the simplicity of SSE\n\n## Browser Polyfill\n\nJust add `example/eventsource-polyfill.js` file to your web page:\n\n```html\n<script src=/eventsource-polyfill.js></script>\n```\n\nNow you will have two global constructors:\n\n```javascript\nwindow.EventSourcePolyfill\nwindow.EventSource // Unchanged if browser has defined it. Otherwise, same as window.EventSourcePolyfill\n```\n\nIf you're using [webpack](https://webpack.github.io/) or [browserify](http://browserify.org/)\nyou can of course build your own. (The `example/eventsource-polyfill.js` is built with webpack).\n\n## Extensions to the W3C API\n\n### Setting HTTP request headers\n\nYou can define custom HTTP headers for the initial HTTP request. This can be useful for e.g. sending cookies\nor to specify an initial `Last-Event-ID` value.\n\nHTTP headers are defined by assigning a `headers` attribute to the optional `eventSourceInitDict` argument:\n\n```javascript\nvar eventSourceInitDict = {headers: {'Cookie': 'test=test'}};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\n### Allow unauthorized HTTPS requests\n\nBy default, https requests that cannot be authorized will cause the connection to fail and an exception\nto be emitted. You can override this behaviour, along with other https options:\n\n```javascript\nvar eventSourceInitDict = {https: {rejectUnauthorized: false}};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\nNote that for Node.js < v0.10.x this option has no effect - unauthorized HTTPS requests are *always* allowed.\n\n### HTTP status code on error events\n\nUnauthorized and redirect error status codes (for example 401, 403, 301, 307) are available in the `status` property in the error event.\n\n```javascript\nes.onerror = function (err) {\n  if (err) {\n    if (err.status === 401 || err.status === 403) {\n      console.log('not authorized');\n    }\n  }\n};\n```\n\n### HTTP/HTTPS proxy\n\nYou can define a `proxy` option for the HTTP request to be used. This is typically useful if you are behind a corporate firewall.\n\n```javascript\nvar es = new EventSource(url, {proxy: 'http://your.proxy.com'});\n```\n\n\n## License\n\nMIT-licensed. See LICENSE\n",
    "licenseText": "The MIT License\n\nCopyright (c) EventSource GitHub organisation\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/eventsource/-/eventsource-2.0.2.tgz#76dfcc02930fb2ff339520b6d290da573a9e8508",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/eventsource/-/eventsource-2.0.2.tgz",
    "hash": "76dfcc02930fb2ff339520b6d290da573a9e8508",
    "integrity": "sha512-IzUmBGPR3+oUG9dUeXynyNmf91/3zUSJg1lCktzKw47OXuhco54U3r9B7O4XX+Rb1Itm9OZ2b0RkTs10bICOxA==",
    "registry": "npm",
    "packageName": "eventsource",
    "cacheIntegrity": "sha512-IzUmBGPR3+oUG9dUeXynyNmf91/3zUSJg1lCktzKw47OXuhco54U3r9B7O4XX+Rb1Itm9OZ2b0RkTs10bICOxA== sha1-dt/MApMPsv8zlSC20pDaVzqehQg="
  },
  "registry": "npm",
  "hash": "76dfcc02930fb2ff339520b6d290da573a9e8508"
}