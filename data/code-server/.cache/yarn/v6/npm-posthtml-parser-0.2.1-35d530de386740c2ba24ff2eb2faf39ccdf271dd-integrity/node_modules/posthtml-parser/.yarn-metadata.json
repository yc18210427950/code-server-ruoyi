{
  "manifest": {
    "name": "posthtml-parser",
    "version": "0.2.1",
    "description": "Parse HTML/XML to PostHTMLTree",
    "keywords": [
      "html",
      "xml",
      "parser",
      "posthtml",
      "posthtmltree"
    ],
    "main": "index.js",
    "scripts": {
      "test": "npm run lint && npm run coverage",
      "lint": "jshint . && jscs -v .",
      "coverage": "istanbul cover --report text --report html --report lcov node_modules/mocha/bin/_mocha",
      "preversion": "npm test",
      "postversion": "git push && git push --tags && rm -rf coverage"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/posthtml/posthtml-parser.git"
    },
    "author": {
      "name": "Ivan Voischev",
      "email": "voischev.ivan@ya.ru"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/posthtml/posthtml-parser/issues"
    },
    "homepage": "https://github.com/posthtml/posthtml-parser#readme",
    "dependencies": {
      "htmlparser2": "^3.8.3",
      "isobject": "^2.1.0"
    },
    "devDependencies": {
      "chai": "^3.3.0",
      "istanbul": "^0.4.0",
      "jscs": "^2.3.5",
      "jshint": "^2.8.0",
      "mocha": "^2.3.3",
      "rewire": "^2.5.2",
      "sinon": "^1.17.4",
      "sinon-chai": "^2.8.0"
    },
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-posthtml-parser-0.2.1-35d530de386740c2ba24ff2eb2faf39ccdf271dd-integrity/node_modules/posthtml-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# posthtml-parser\n[![npm version](https://badge.fury.io/js/posthtml-parser.svg)](http://badge.fury.io/js/posthtml-parser)\n[![Build Status](https://travis-ci.org/posthtml/posthtml-parser.svg?branch=master)](https://travis-ci.org/posthtml/posthtml-parser?branch=master)\n[![Coverage Status](https://coveralls.io/repos/posthtml/posthtml-parser/badge.svg?branch=master)](https://coveralls.io/r/posthtml/posthtml-parser?branch=master)\n\nParse HTML/XML to [PostHTML AST](https://github.com/posthtml/posthtml-parser#posthtml-ast-format).\nMore about [PostHTML](https://github.com/posthtml/posthtml#readme)\n\n## Install\n\n[NPM](http://npmjs.com) install\n```\n$ npm install posthtml-parser\n```\n\n## Usage\n\n#### Input HTML\n```html\n<a class=\"animals\" href=\"#\">\n    <span class=\"animals__cat\" style=\"background: url(cat.png)\">Cat</span>\n</a>\n```\n```js\nconst parser = require('posthtml-parser')\nconst fs = require('fs')\nconst html = fs.readFileSync('path/to/input.html').toString()\n\nconsole.log(parser(html)) // Logs a PostHTML AST\n```\n\n#### input HTML\n```html\n<a class=\"animals\" href=\"#\">\n    <span class=\"animals__cat\" style=\"background: url(cat.png)\">Cat</span>\n</a>\n```\n\n#### Result PostHTMLTree\n```js\n[{\n    tag: 'a',\n    attrs: {\n        class: 'animals',\n        href: '#'\n    },\n    content: [\n        '\\n    ',\n            {\n            tag: 'span',\n            attrs: {\n                class: 'animals__cat',\n                style: 'background: url(cat.png)'\n            },\n            content: ['Cat']\n        },\n        '\\n'\n    ]\n}]\n```\n\n## PostHTML AST Format\n\nAny parser being used with PostHTML should return a standard PostHTML [Abstract Syntax Tree](https://www.wikiwand.com/en/Abstract_syntax_tree) (AST). Fortunately, this is a very easy format to produce and understand. The AST is an array that can contain strings and objects. Any strings represent plain text content to be written to the output. Any objects represent HTML tags.\n\nTag objects generally look something like this:\n\n```js\n{\n    tag: 'div',\n    attrs: {\n        class: 'foo'\n    },\n    content: ['hello world!']\n}\n```\n\nTag objects can contain three keys. The `tag` key takes the name of the tag as the value. This can include custom tags. The optional `attrs` key takes an object with key/value pairs representing the attributes of the html tag. A boolean attribute has an empty string as its value. Finally, the optional `content` key takes an array as its value, which is a PostHTML AST. In this manner, the AST is a tree that should be walked recursively.\n\n## License\n\n[MIT](LICENSE)\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Ivan Voischev <voischev.ivan@ya.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/posthtml-parser/-/posthtml-parser-0.2.1.tgz#35d530de386740c2ba24ff2eb2faf39ccdf271dd",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/posthtml-parser/-/posthtml-parser-0.2.1.tgz",
    "hash": "35d530de386740c2ba24ff2eb2faf39ccdf271dd",
    "integrity": "sha512-nPC53YMqJnc/+1x4fRYFfm81KV2V+G9NZY+hTohpYg64Ay7NemWWcV4UWuy/SgMupqQ3kJ88M/iRfZmSnxT+pw==",
    "registry": "npm",
    "packageName": "posthtml-parser",
    "cacheIntegrity": "sha512-nPC53YMqJnc/+1x4fRYFfm81KV2V+G9NZY+hTohpYg64Ay7NemWWcV4UWuy/SgMupqQ3kJ88M/iRfZmSnxT+pw== sha1-NdUw3jhnQMK6JP8usvrznM3ycd0="
  },
  "registry": "npm",
  "hash": "35d530de386740c2ba24ff2eb2faf39ccdf271dd"
}