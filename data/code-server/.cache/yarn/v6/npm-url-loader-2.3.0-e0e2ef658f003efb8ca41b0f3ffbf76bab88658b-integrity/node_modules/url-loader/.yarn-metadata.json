{
  "manifest": {
    "name": "url-loader",
    "version": "2.3.0",
    "description": "A loader for webpack which transforms files into base64 URIs",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/url-loader.git"
    },
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "homepage": "https://github.com/webpack-contrib/url-loader",
    "bugs": {
      "url": "https://github.com/webpack-contrib/url-loader/issues"
    },
    "main": "dist/cjs.js",
    "engines": {
      "node": ">= 8.9.0"
    },
    "scripts": {
      "start": "npm run build -- -w",
      "prebuild": "npm run clean",
      "build": "cross-env NODE_ENV=production babel src -d dist --ignore \"src/**/*.test.js\" --copy-files",
      "clean": "del-cli dist",
      "commitlint": "commitlint --from=master",
      "lint:prettier": "prettier \"{**/*,*}.{js,json,md,yml,css}\" --list-different",
      "lint:js": "eslint --cache src test",
      "lint": "npm-run-all -l -p \"lint:**\"",
      "prepare": "npm run build",
      "release": "standard-version",
      "security": "npm audit",
      "test:only": "cross-env NODE_ENV=test jest",
      "test:watch": "cross-env NODE_ENV=test jest --watch",
      "test:coverage": "cross-env NODE_ENV=test jest --collectCoverageFrom=\"src/**/*.js\" --coverage",
      "pretest": "npm run lint",
      "test": "cross-env NODE_ENV=test npm run test:coverage",
      "defaults": "webpack-defaults"
    },
    "files": [
      "dist"
    ],
    "peerDependencies": {
      "webpack": "^4.0.0",
      "file-loader": "*"
    },
    "peerDependenciesMeta": {
      "file-loader": {
        "optional": true
      }
    },
    "dependencies": {
      "loader-utils": "^1.2.3",
      "mime": "^2.4.4",
      "schema-utils": "^2.5.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.7.0",
      "@babel/core": "^7.7.2",
      "@babel/preset-env": "^7.7.1",
      "@commitlint/cli": "^8.2.0",
      "@commitlint/config-conventional": "^8.2.0",
      "@webpack-contrib/defaults": "^5.0.2",
      "@webpack-contrib/eslint-config-webpack": "^3.0.0",
      "babel-jest": "^24.9.0",
      "commitlint-azure-pipelines-cli": "^1.0.2",
      "cross-env": "^6.0.3",
      "del": "^5.1.0",
      "del-cli": "^3.0.0",
      "eslint": "^6.6.0",
      "eslint-config-prettier": "^6.7.0",
      "eslint-plugin-import": "^2.18.2",
      "file-loader": "^4.2.0",
      "husky": "^3.1.0",
      "jest": "^24.9.0",
      "jest-junit": "^9.0.0",
      "lint-staged": "^9.4.3",
      "memory-fs": "^0.5.0",
      "npm-run-all": "^4.1.5",
      "prettier": "^1.19.1",
      "standard-version": "^7.0.1",
      "webpack": "^4.41.2"
    },
    "keywords": [
      "webpack"
    ],
    "_registry": "npm",
    "_loc": "/config/.cache/yarn/v6/npm-url-loader-2.3.0-e0e2ef658f003efb8ca41b0f3ffbf76bab88658b-integrity/node_modules/url-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# url-loader\n\nA loader for webpack which transforms files into base64 URIs.\n\n## Getting Started\n\nTo begin, you'll need to install `url-loader`:\n\n```console\n$ npm install url-loader --save-dev\n```\n\n`url-loader` works like\n[`file-loader`](https://github.com/webpack-contrib/file-loader), but can return\na DataURL if the file is smaller than a byte limit.\n\n**index.js**\n\n```js\nimport img from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: 8192,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n### `fallback`\n\nType: `String`\nDefault: `'file-loader'`\n\nSpecifies an alternative loader to use when a target file's size exceeds the\nlimit set in the `limit` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              fallback: require.resolve('responsive-loader'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe fallback loader will receive the same configuration options as url-loader.\n\nFor example, to set the quality option of a responsive-loader above use:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              fallback: require.resolve('responsive-loader'),\n              quality: 85,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `limit`\n\nType: `Number|Boolean|String`\nDefault: `undefined`\n\nThe limit can be specified via loader options and defaults to no limit.\n\n#### `Number|String`\n\nA `Number` or `String` specifying the maximum size of a file in bytes. If the file size is\n**equal** or **greater** than the limit [`file-loader`](https://github.com/webpack-contrib/file-loader)\nwill be used (by default) and all query parameters are passed to it.\nUsing an alternative to `file-loader` is enabled via the `fallback` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: 8192,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Boolean`\n\nEnable or disable transform files into base64.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `mimetype`\n\nType: `String`\nDefault: `(file extension)`\n\nSets the MIME type for the file to be transformed. If unspecified the file\nextensions will be used to lookup the MIME type.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              mimetype: 'image/png',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/url-loader.svg\n[npm-url]: https://npmjs.com/package/url-loader\n[node]: https://img.shields.io/node/v/url-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/url-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/url-loader\n[tests]: https://dev.azure.com/webpack-contrib/url-loader/_apis/build/status/webpack-contrib.url-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/url-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/url-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/url-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=url-loader\n[size-url]: https://packagephobia.now.sh/result?p=url-loader\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmmirror.com/url-loader/-/url-loader-2.3.0.tgz#e0e2ef658f003efb8ca41b0f3ffbf76bab88658b",
    "type": "tarball",
    "reference": "https://registry.npmmirror.com/url-loader/-/url-loader-2.3.0.tgz",
    "hash": "e0e2ef658f003efb8ca41b0f3ffbf76bab88658b",
    "integrity": "sha512-goSdg8VY+7nPZKUEChZSEtW5gjbS66USIGCeSJ1OVOJ7Yfuh/36YxCwMi5HVEJh6mqUYOoy3NJ0vlOMrWsSHog==",
    "registry": "npm",
    "packageName": "url-loader",
    "cacheIntegrity": "sha512-goSdg8VY+7nPZKUEChZSEtW5gjbS66USIGCeSJ1OVOJ7Yfuh/36YxCwMi5HVEJh6mqUYOoy3NJ0vlOMrWsSHog== sha1-4OLvZY8APvuMpBsPP/v3a6uIZYs="
  },
  "registry": "npm",
  "hash": "e0e2ef658f003efb8ca41b0f3ffbf76bab88658b"
}